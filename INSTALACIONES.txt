TODO LO NECESARIO PARA PODER REALIZAR EL PROYECTO

1. Instalar Python
Descarga la última versión de Python 3.13.7 desde "https://www.python.org/downloads/"
Marca la opción "Add Python to PATH" al instalar.
Para comprobar:
	python --version

2. Instalar Git
Te servirá para manejar versiones y trabajar con repositorios (por ejemplo en GitHub).
Descarga desde "https://git-scm.com/"
Comprueba con:
	git --version

3. Crear un entorno virtual
Esto es importante para mantener las librerías ordenadas en cada proyecto:
	python -m venv venv

Y luego activarlo:
	En Windows:
		venv\Scripts\activate

	En Linux/Mac:
		source venv/bin/activate

4. Instalar extensiones en VS Code
Abre VS Code y agrega:

Python (de Microsoft) → soporte completo para Python.
Pylance → autocompletado más inteligente.
GitLens → ayuda con Git.
REST Client (opcional) → para probar tus APIs directamente en VS Code.

5. Instalar dependencias del proyecto
Dependerá de qué quieras hacer. Para backend con "FastAPI" (rápido y moderno):
	pip install fastapi uvicorn
Y si quieres manejar base de datos (ejemplo: SQLite con SQLAlchemy):
	pip install sqlalchemy

ESTRUCTURA DEL PROYECTO:
mi_proyecto/
│── README.md               # Documentación del proyecto
│── requirements.txt        # Librerías que vas a usar
│── .gitignore              # Archivos/carpetas que Git debe ignorar
│
├── app/                    # Código principal de la aplicación
│   ├── main.py             # Punto de entrada de FastAPI
│   │
│   ├── models/             # MODELS: Tablas y entidades (SQLAlchemy)
│   │   └── user.py
│   │
│   ├── managers/           # MANAGERS: Lógica de negocio
│   │   └── user_manager.py
│   │
│   ├── interfaces/         # INTERFACES: Rutas de la API (FastAPI endpoints)
│   │   └── user_routes.py
│   │
│   ├── db/                 # BD: Configuración de base de datos
│   │   └── connection.py
│   │
│   ├── schemas/            # (extra) Validación de datos con Pydantic
│   │   └── user_schema.py
│   │
│   └── tests/              # (extra) Pruebas automáticas
│       └── test_user.py
│
└── migrations/             # Alembic (migraciones de la base de datos)

